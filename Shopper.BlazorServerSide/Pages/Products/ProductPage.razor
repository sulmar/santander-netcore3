@page "/products/{id:int}"

@inject IProductRepository productRepository 

<h3>Product Details</h3>

<div>

    @*<table>
            <tbody>
                <ProductItemComponent Product="@product" />
            </tbody>
        </table>*@

    <div class="card" style="width: 18rem;">
        <img src="https://picsum.photos/200/300" class="card-img-top" alt="...">
        <div class="card-body">
            <h5 class="card-title">@product.Name</h5>
            <p class="card-text">@product.Description</p>
            <p class="card-footer">@product.Price.ToString("C2")</p>
        </div>
    </div>

    @*dotnet add package Accelist.FluentValidation.Blazor --version 4.0.0*@

<EditForm Model="@product" OnValidSubmit="Save">

    <DataAnnotationsValidator />

    @*<FluentValidator></FluentValidator>*@

    <ValidationSummary />

    <label for="name">Name</label>
    <InputText id="name" @bind-Value="product.Name" />

    <label for="price">Price</label>
    <InputNumber id="price" @bind-Value="product.Price" />

    <button type="submit">Save</button>

</EditForm>


</div>

@code {

    private Product product;

    [Parameter]
    public int Id { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        product = await productRepository.GetAsync(Id);
    }

    private async Task Save()
    {
        await productRepository.UpdateAsync(product);
    }

}
